1. Listing files ---
--------------------
$ ls -Fal. --> F - for non color display, a - show hidden, l - long listing
$ ls -FaRl --> R - Recursive

$ ls M*
$ ls M?sic
$ ls M[ur]sic
$ ls M[a-z]sic

$ tree

inode number - Unique number assigned by the os to all the files in the virtual file system
$ ls -i --> i - inode number


2. Copying files ---
--------------------
cp source destination
The new file acts like a brand new file with updated modification time.

$ cp -iR src dst --> i - ask whether to overwrite a file

3. Linking files ---
--------------------
Symbolic link
Hard link

Symbolic link ---
$ ln -s original_file s_link_file
inode number is different from the orginal file. New file is created that points to the original file.

Hard link --
$ ln orginal_file h_link_file
inode number is the same as the original file. However they are physically the same file.


4. Make Directory ---
---------------------

$ mkdir dirname
$ mkdir -p dir1/dir2/dir3. --> buld create directory

5. Remove Directory ---
-----------------------

$ rmdir dirname --> Only deletes empty directory

6. Remove file ---
------------------

$ rm -rf --> r - recursive, f - force, don't ask
$ rm -ri --> i - ask

7. Check the type of file ---
-----------------------------

$ file filename

8. Viewing the whole file ---
-----------------------------

$ cat -n filename --> n - line number

$ more filename --> use q to quit
$ less filename --> Advanced version of more
more is a pager utility. It is also used to view man pages

$ head filename --> first 10 lines
$ tail filename --> last 10 lines
$ tail -n 3 filename --> last 3 lines
$ tail -f filename --> peek inside a file as it is beign processed by another process.

9. Searching the virtual file system ---
------------------------------------------

$ find dir_path -name filename


20. List process ---
--------------------

$ ps
$ ps -A --> All
$ ps --forest --> tree view of parent child processes

ps cols ---
PID - process ID
PPID - parent process ID
C - Last used processor


$ top
top cols ---
PID - process id
PR - priority
NI - Nice number
VIRT - total amount of virtual memory
RES - anount of phy memory
SHR - amount of shared mem with other processes
S - state of the process

$ htop

21. Kill a process ---
----------------------

$ kill pid

kill sends TERM signal (terminate if possible) to the process

# killall *wildcardnameofprocess


22. Mounting ---
----------------

$ mount --> list of mounted devices

$ mount -t type device directory

windows removable media device types
vfat - windows long file system
ntfs - windows advanced file system
iso9660 - CD-ROM

$ umount directory

23. Space availble ---
----------------------

$ df -h --> h - size in human readable format

show size of folders in the current directory
$ du -h

24. sort ---
------------

$ sort filename
$ sort -n filename --> n - sort numbers
$ sort -M filename --> M - sort first three letter month
$ sort -r filename --> r - sort in reverses

$ ls path | sort


25. searching for text ---
---------------------------

$ grep options pattern file


26. source and .
----------------

source filename
or
. filename

executes the file in the current shell without creating a child shell

27. export
----------

export var_name

sends the env variable to the child process






































 



























